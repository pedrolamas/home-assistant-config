send_notification:
  description: Sends a notification
  fields:
    recipient:
      name: Recipient
      description: The notification recipient
      selector:
        select:
          options:
            - All
            - Pedro
            - Joana
    message:
      name: Message
      description: The notification message
      selector:
        text:
          multiline: true
    title:
      name: Title
      description: The notification title
      selector:
        text:
    color:
      name: Color
      description: The notification icon color
      selector:
        text:
    filename:
      name: Filename
      description: The notification attachment filename
      selector:
        text:
    channel:
      name: Channel
      description: The notification channel
      selector:
        text:
    tag:
      name: Tag
      description: The notification tag
      selector:
        text:
    actions:
      name: Actions
      description: The notification actions
      selector:
        object:
    allow_clear:
      name: Allow clear
      description: If set to true and the alarm is disarmed, it will clear any existing notification instead of showing a new one
      selector:
        boolean:
  variables:
    recipient: "{{ recipient | default }}"
    message: "{{ message | default }}"
    title: "{{ title | default }}"
    color: "{{ color | default }}"
    filename: "{{ filename | default }}"
    channel: "{{ channel | default }}"
    tag: "{{ tag | default }}"
    allow_clear: "{{ allow_clear | default(false) }}"
    actions: >-
      {{ actions | default }}
  mode: parallel
  sequence:
    - variables:
        recipient_lower: "{{ recipient | lower }}"
    - service: >-
        {% if recipient_lower == 'pedro' %}
          notify.mobile_app_pedro_pixel7pro
        {% elif recipient_lower == 'joana' %}
          notify.mobile_app_joana_pixel7pro
        {% else %}
          notify.mobile_app_all
        {% endif %}
      data:
        message: >-
          {{ 'clear_notification' if allow_clear and is_state('alarm_control_panel.home_alarm', 'disarmed') else message }}
        title: "{{ title }}"
        data:
          color: "{{ color }}"
          image: "{{ filename }}"
          channel: "{{ channel }}"
          tag: "{{ tag }}"
          priority: "high"
          actions: >-
            {{ actions }}

clear_notification:
  description: Clears an existing notification
  fields:
    recipient:
      name: Recipient
      description: The notification recipient
      selector:
        select:
          options:
            - All
            - Pedro
            - Joana
    channel:
      name: Channel
      description: The notification channel
      selector:
        text:
    tag:
      name: Tag
      description: The notification tag
      selector:
        text:
  variables:
    recipient: "{{ recipient | default | lower }}"
    channel: "{{ channel | default }}"
    tag: "{{ tag | default }}"
  mode: parallel
  sequence:
    - variables:
        recipient_lower: "{{ recipient | lower }}"
    - service: >-
        {% if recipient_lower == 'pedro' %}
          notify.mobile_app_pedro_pixel7pro
        {% elif recipient_lower == 'joana' %}
          notify.mobile_app_joana_pixel7pro
        {% else %}
          notify.mobile_app_all
        {% endif %}
      data:
        message: clear_notification
        data:
          channel: "{{ channel }}"
          tag: "{{ tag }}"
          priority: "high"

send_notification_with_living_room_camera_snapshot:
  mode: queued
  sequence:
    - service: script.send_notification
      data:
        recipient: Pedro
        message: "{{ message }}"
        filename: "/api/camera_proxy/camera.living_room_camera"

send_notification_with_lower_floor_camera_snapshot:
  mode: queued
  sequence:
    - service: script.send_notification
      data:
        recipient: Pedro
        message: "{{ message }}"
        filename: "/api/camera_proxy/camera.lower_floor_camera"

turn_on_lg_smart_tv:
  sequence:
    - condition: "{{ is_state('media_player.lg_smart_tv', 'off') }}"
    - service: media_player.turn_on
      data:
        entity_id: media_player.lg_smart_tv
    - wait_template: "{{ not is_state('media_player.lg_smart_tv', 'off') }}"
      timeout: "00:00:50"
      continue_on_timeout: true

watch_on_lg_smart_tv:
  fields:
    source:
      name: Source
      description: The source to select
      selector:
        text:
    channel:
      name: Channel
      description: The channel to select
      selector:
        text:
  variables:
    source: "{{ source | default }}"
    channel: "{{ channel | default }}"
  sequence:
    - service: script.turn_on_lg_smart_tv
    - if:
        - "{{ source != '' and not is_state_attr('media_player.lg_smart_tv', 'source', source) }}"
      then:
        - service: media_player.select_source
          data:
            entity_id: media_player.lg_smart_tv
            source: "{{ source }}"
    - condition: "{{ channel != '' }}"
    - service: media_player.play_media
      data:
        entity_id: media_player.lg_smart_tv
        media_content_id: "{{ channel }}"
        media_content_type: "channel"

watch_netflix_on_lg_smart_tv:
  sequence:
    - service: script.turn_on_lg_smart_tv
    - service: script.watch_on_lg_smart_tv
      data:
        source: "Netflix"

watch_plex_on_lg_smart_tv:
  sequence:
    - service: script.turn_on_lg_smart_tv
    - service: script.watch_on_lg_smart_tv
      data:
        source: "Plex"

watch_bbc_iplayer_on_lg_smart_tv:
  sequence:
    - service: script.turn_on_lg_smart_tv
    - service: script.watch_on_lg_smart_tv
      data:
        source: "BBC iPlayer"

watch_bbc_one_on_lg_smart_tv:
  sequence:
    - service: script.turn_on_lg_smart_tv
    - service: script.watch_on_lg_smart_tv
      data:
        source: "Live TV"
        channel: "BBC ONE Lon HD"

watch_bbc_news_on_lg_smart_tv:
  sequence:
    - service: script.turn_on_lg_smart_tv
    - service: script.watch_on_lg_smart_tv
      data:
        source: "Live TV"
        channel: "BBC NEWS"

watch_cbeebies_on_lg_smart_tv:
  sequence:
    - service: script.turn_on_lg_smart_tv
    - service: script.watch_on_lg_smart_tv
      data:
        source: "Live TV"
        channel: "CBeebies HD"

watch_channel_4_on_lg_smart_tv:
  sequence:
    - service: script.turn_on_lg_smart_tv
    - service: script.watch_on_lg_smart_tv
      data:
        source: "Live TV"
        channel: "Channel 4 HD"
