blueprint:
  name: Device connectivity state change
  description: Process device connectivity state changes
  domain: automation
  input:
    state_entity_id:
      name: Online/Offline entities
      description: The entities to monitor for online/offline state changes
      selector:
        entity:
    warning_delay:
      name: Warning delay on device off/offline
      description: The time in seconds before sending a notification warning about a device being off/offline
      default: 60
      selector:
        number:
          min: 10
          max: 300
          step: 10
          unit_of_measurement: seconds

mode: queued

triggers:
  - trigger: state
    id: device_offline
    entity_id: !input state_entity_id
    to:
      - "off"
      - "offline"
    for:
      seconds: !input warning_delay
  - trigger: state
    id: device_online
    entity_id: !input state_entity_id
    from:
      - "off"
      - "offline"
    to:
      - "on"
      - "online"

action:
  - variables:
      device_entity_id: "{{ trigger.entity_id }}"
      device_friendly_name: "{{ trigger.to_state.attributes.friendly_name }}"
  - choose:
      - conditions:
          - condition: trigger
            id: device_offline
        sequence:
          - service: script.send_notification
            data:
              recipient: "pedro"
              message: "{{ device_friendly_name }} is offline."
              color: "red"
              channel: "System"
              tag: "{{ device_entity_id }}-deviceoffline"

      - conditions:
          - condition: trigger
            id: device_online
        sequence:
          - service: script.clear_notification
            data:
              recipient: "pedro"
              channel: "System"
              tag: "{{ device_entity_id }}-deviceoffline"
