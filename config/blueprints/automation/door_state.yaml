blueprint:
  name: Door state change
  description: Process door state changes
  domain: automation
  input:
    door_state_entity_id:
      name: Door
      description: The door state sensor
      selector:
        entity:
          domain: binary_sensor
          device_class: door
    companion_light_entity_id:
      name: Light
      description: Light to turn on when door is open
      selector:
        entity:
          domain: light
    light_off_on_door_closed_helper_entity_id:
      name: Light off on door closed helper
      description: Helper to indicate that light should be turned off after delay from closing the door
      selector:
        entity:
          domain: input_boolean
    warning_on_door_open_delay:
      name: Warning delay on door open
      description: The time in seconds before sending a notification warning about the door open
      default: 300
      selector:
        number:
          min: 60
          max: 600
          step: 10
          unit_of_measurement: seconds
    light_off_on_door_closed_delay:
      name: Lights off delay on door close
      description: The time in seconds before turning the light off after closing the door
      default: 30
      selector:
        number:
          min: 10
          max: 120
          step: 10
          unit_of_measurement: seconds

mode: queued

variables:
  door_state_entity_id: !input door_state_entity_id
  companion_light_entity_id: !input companion_light_entity_id
  light_off_on_door_closed_helper_entity_id: !input light_off_on_door_closed_helper_entity_id
  door_state_friendly_name: "{{ state_attr(door_state_entity_id, 'friendly_name') }}"

trigger:
  - platform: state
    id: door_opened
    entity_id: !input door_state_entity_id
    to: "on"
  - platform: state
    id: door_opened_delay
    entity_id: !input door_state_entity_id
    to: "on"
    for:
      seconds: !input warning_on_door_open_delay
  - platform: state
    id: door_closed
    entity_id: !input door_state_entity_id
    to: "off"
  - platform: state
    id: door_closed_delay
    entity_id: !input door_state_entity_id
    to: "off"
    for:
      seconds: !input light_off_on_door_closed_delay

action:
  - choose:
      - conditions:
          - condition: trigger
            id: door_opened
        sequence:
          - service: script.send_notification
            data:
              message: "{{ door_state_friendly_name }} is open!"
              channel: "Alarm"
              tag: "{{ door_state_entity_id }}"
          - condition: template
            value_template: "{{ is_state(companion_light_entity_id, 'off') }}"
          - service: light.turn_on
            data:
              entity_id: "{{ companion_light_entity_id }}"
          - service: input_boolean.turn_on
            data:
              entity_id: "{{ light_off_on_door_closed_helper_entity_id }}"

      - conditions:
          - condition: trigger
            id: door_opened_delay
        sequence:
          - service: script.send_notification
            data:
              message: "{{ door_state_friendly_name }} is still open!"
              color: "red"
              channel: "Alarm"
              tag: "{{ door_state_entity_id }}"

      - conditions:
          - condition: trigger
            id: door_closed
        sequence:
          - service: script.send_notification
            data:
              message: "{{ door_state_friendly_name }} is closed!"
              channel: "Alarm"
              tag: "{{ door_state_entity_id }}"
              allow_clear: true

      - conditions:
          - condition: trigger
            id: door_closed_delay
        sequence:
          - condition: template
            value_template: "{{ is_state(light_off_on_door_closed_helper_entity_id, 'on') }}"
          - service: input_boolean.turn_off
            data:
              entity_id: "{{ light_off_on_door_closed_helper_entity_id }}"
          - service: light.turn_off
            data:
              entity_id: "{{ companion_light_entity_id }}"
