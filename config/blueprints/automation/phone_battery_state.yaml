blueprint:
  name: Phone battery state
  description: Process phone battery state changes
  domain: automation
  input:
    battery_level_entity_id:
      name: Battery Level
      description: The phone battery level sensor
      selector:
        entity:
          integration: mobile_app
          domain: sensor
          device_class: battery
    battery_state_entity_id:
      name: Battery State
      description: The phone battery state sensor
      selector:
        entity:
          integration: mobile_app
          domain: sensor
    recipient:
      name: Recipient
      description: The notification recipient

variables:
  battery_state_entity_id: !input battery_state_entity_id
  battery_level_entity_id: !input battery_level_entity_id

triggers:
  - trigger: state
    entity_id: !input battery_state_entity_id
  - trigger: numeric_state
    entity_id: !input battery_level_entity_id
    above: 89

action:
  - variables:
      battery_state: "{{ states(battery_state_entity_id) }}"
      battery_level: "{{ states(battery_level_entity_id) }}"
  - choose:
      - conditions:
          - "{{ battery_state == 'full' }}"
        sequence:
          - service: script.send_notification
            data:
              recipient: !input recipient
              message: "Phone battery fully charged!"
              channel: "Phone"
              tag: "Battery"

      - conditions:
          - "{{ battery_state == 'charging' and battery_level > 89 }}"
        sequence:
          - service: script.send_notification
            data:
              recipient: !input recipient
              message: "Phone battery charged to {{ battery_level }}%!"
              channel: "Phone"
              tag: "Battery"

      - conditions:
          - "{{ battery_state in ['discharging', 'not_charging'] }}"
        sequence:
          - service: script.clear_notification
            data:
              recipient: !input recipient
              channel: "Phone"
              tag: "Battery"
